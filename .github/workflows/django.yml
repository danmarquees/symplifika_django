symplifika_django/.github/workflows/django.yml
```
name: Django CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      - name: Run flake8
        run: flake8 .
      - name: Run black check
        run: black --check .
      - name: Run isort check
        run: isort --check-only .

  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      DJANGO_SETTINGS_MODULE: symplifika.settings
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt coverage
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests with coverage
        run: coverage run manage.py test
      - name: Report coverage
        run: coverage report -m

  staticfiles:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Collect static files
        run: python manage.py collectstatic --noinput

  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit pip-audit
      - name: Run bandit
        run: bandit -r .
      - name: Run pip-audit
        run: pip-audit

  deploy:
    runs-on: ubuntu-latest
    needs: [test, staticfiles, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Render CLI
        run: |
          curl -fsSL https://cdn.render.com/cli/install.sh | bash
          export PATH="$HOME/.render:$PATH"
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          export PATH="$HOME/.render:$PATH"
          render deploy --service ${{ secrets.RENDER_SERVICE_ID }} --api-key $RENDER_API_KEY
